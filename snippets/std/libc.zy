/* Copyright (c) 2023 Stan Strum
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree.
 */

// lib!("c") libc {
// allow! non_lowercase_type:
  type CString := []u8;

namespace mem {
  extern malloc -> &[]u8:
    size: usize ;

  extern free:
    ptr: &[]u8;
};

namespace fs {
  // this is not correct but since we're just using it for
  // the pointer, it should be okay -- effectively `void*`
  type FILE := []u8;

  extern fopen -> &FILE:
    filename: &super::CString,
    mode: &super::CString;

  extern fclose -> i32:
    stream: &FILE;

  extern fseek -> i32:
    stream: &FILE,
    offset: i32,
    whence: i32;

  extern ftell -> i32:
    steam: &FILE;

  extern fread -> usize:
    ptr: &[]u8,
    size: usize,
    nmemb: usize,
    stream: &FILE;
};

extern printf -> i32:
  fmt: &CString,
  ...;

extern puts -> i32:
  s: &CString;
